<?phpnamespace Gravel\Core;class EntityCollection extends Collection{	public $data = [];	public $pages = 1;	public $perPage = 0;	private $_dataStore = [];	public function __construct($data)	{		parent::__construct($data);		$this->_dataStore = $this->data = $data;		$this->pages = 1;		$this->perPage = count($this->_dataStore);	}	public function __toString()	{		$string = [];		foreach ($this->data as $k => $v) {			if (is_object($v)) {				$string[] = $v;			}		}		return '[' . implode(',', $string) . ']';	}	public function paginate($limit, $offset = 0)	{		$this->data = array_slice($this->_dataStore, ($offset * $limit), $limit);		$this->pages = ceil(count($this->_dataStore) / $limit);		$this->perPage = $limit;	}	public function generatePaginationLinks($getParameter = 'page')	{		$toReturn = [];		for ($i = 0; $i < $this->pages; ++$i) {			$class = ((isset($_GET[$getParameter]) && $_GET[$getParameter] == $i) || !isset($_GET[$getParameter]) && $i == 0) ? 'active' : null;			$string = "<li class=\"{$class}\"><a href=\"?{$getParameter}={$i}\">" . ($i + 1) . "</a></li>";			array_push($toReturn, $string);		}		return "<ul class=\"pagination\">" . implode('', $toReturn) . "</ul>";	}}